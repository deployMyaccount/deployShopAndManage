name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  # Step 1: Run tests in docker-compose environment
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Install backend dependencies
        run: |
          cd backend
          npm install
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN }}
          PGP_URL: ${{ secrets.PGP_URL }}
          PGP_URL_ADMIN: ${{ secrets.PGP_URL_ADMIN }}
          PORT: ${{ secrets.PORT }}
          CLOUD_NAME: ${{ secrets.CLOUD_NAME }}
          CLOUD_API_KEY: ${{ secrets.CLOUD_API_KEY }}
          CLOUD_API_SECRET: ${{ secrets.CLOUD_API_SECRET }}
          ORIGIN_URL: ${{ secrets.ORIGIN_URL }}

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install
        env:
          VITE_BASE_URL: ${{ secrets.VITE_BASE_URL }}
          VITE_BASE_URL_IMG: ${{ secrets.VITE_BASE_URL_IMG }}
          VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}
          DOMAIN: ${{ secrets.DOMAIN }}

      - name: Set tests environment
        run: |
          cd tests
        env:
          PGP_URL_ADMIN: ${{ secrets.PGP_URL_ADMIN }}
          PGP_URL: ${{ secrets.PGP_URL }}
          VITE_BASE_URL: ${{ secrets.VITE_BASE_URL }}
          ORIGIN_URL: ${{ secrets.ORIGIN_URL }}
          DOMAIN: ${{ secrets.DOMAIN }}

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Set up Docker Compose
        run: |
          docker-compose -f docker-compose.yml up

  # Step 2: Build and push frontend image
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build frontend image
        run: docker build -t itqa47/frontend:latest ./frontend

      - name: Push frontend image to Docker Hub
        run: docker push itqa47/frontend:latest

  # Step 3: Deploy to Render
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy to Render
        run: |
          curl -X POST \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{
                "serviceId": "srv-cs9bl5aj1k6c73flgcdg",
                "branch": "main"
              }' \
          https://api.render.com/v1/services/srv-cs9bl5aj1k6c73flgcdg/deploys
